{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nexport class TabsService {\n  constructor(location) {\n    this.location = location;\n    this.activeTab = -1;\n    this.examinePath();\n    location.onUrlChange((url, state) => {\n      this.examinePath();\n    });\n  }\n  changeTab(tab) {\n    if (this.activeTab === tab) return;\n    switch (tab) {\n      case 1:\n      default:\n        this.activeTab = 1;\n        window.history.pushState(null, \"Tab1\", \"/all-items\");\n        break;\n      case 2:\n        this.activeTab = 2;\n        window.history.pushState(null, \"Tab2\", \"/pending-items\");\n        break;\n      case 3:\n        this.activeTab = 3;\n        window.history.pushState(null, \"Tab3\", \"/completed-items\");\n        break;\n    }\n  }\n  examinePath() {\n    switch (window.location.pathname) {\n      case \"/all-items\":\n      case \"\":\n      default:\n        this.activeTab = 1;\n        break;\n      case \"/pending-items\":\n        this.activeTab = 2;\n        break;\n      case \"/completed-items\":\n        this.activeTab = 3;\n        break;\n    }\n  }\n  static #_ = this.ɵfac = function TabsService_Factory(t) {\n    return new (t || TabsService)(i0.ɵɵinject(i1.Location));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TabsService,\n    factory: TabsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,WAAW;EAKtBC,YAAoBC,QAAiB;IAAjB,aAAQ,GAARA,QAAQ;IAC1B,IAAI,CAACC,SAAS,GAAG,CAAC,CAAC;IAEnB,IAAI,CAACC,WAAW,EAAE;IAElBF,QAAQ,CAACG,WAAW,CAAE,CAACC,GAAG,EAAEC,KAAK,KAAI;MACnC,IAAI,CAACH,WAAW,EAAE;IACpB,CAAC,CAAC;EACJ;EAEAI,SAAS,CAACC,GAAW;IAEnB,IAAI,IAAI,CAACN,SAAS,KAAKM,GAAG,EACxB;IAEF,QAAQA,GAAG;MACT,KAAK,CAAC;MACN;QACE,IAAI,CAACN,SAAS,GAAG,CAAC;QAClBO,MAAM,CAACC,OAAO,CAACC,SAAS,CAAC,IAAI,EAAE,MAAM,EAAE,YAAY,CAAC;QACpD;MACF,KAAK,CAAC;QACJ,IAAI,CAACT,SAAS,GAAG,CAAC;QAClBO,MAAM,CAACC,OAAO,CAACC,SAAS,CAAC,IAAI,EAAE,MAAM,EAAE,gBAAgB,CAAC;QACxD;MACF,KAAK,CAAC;QACJ,IAAI,CAACT,SAAS,GAAG,CAAC;QAClBO,MAAM,CAACC,OAAO,CAACC,SAAS,CAAC,IAAI,EAAE,MAAM,EAAE,kBAAkB,CAAC;QAC1D;IAAM;EAEZ;EAEAR,WAAW;IAET,QAAQM,MAAM,CAACR,QAAQ,CAACW,QAAQ;MAC9B,KAAK,YAAY;MACjB,KAAK,EAAE;MACP;QACE,IAAI,CAACV,SAAS,GAAG,CAAC;QAClB;MACF,KAAK,gBAAgB;QACnB,IAAI,CAACA,SAAS,GAAG,CAAC;QAClB;MACF,KAAK,kBAAkB;QACrB,IAAI,CAACA,SAAS,GAAG,CAAC;QAClB;IAAM;EAIZ;EAAC;qBAtDUH,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAc,SAAXd,WAAW;IAAAe,YAFV;EAAM","names":["TabsService","constructor","location","activeTab","examinePath","onUrlChange","url","state","changeTab","tab","window","history","pushState","pathname","factory","providedIn"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\FRONTEND\\JS APP DEV\\ANGULAR-to-do\\todo-app\\src\\app\\services\\tabs.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {Location} from '@angular/common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TabsService {\n\n  activeTab: number;\n\n\n  constructor(private location:Location) { \n    this.activeTab = -1;\n\n    this.examinePath();\n\n    location.onUrlChange( (url, state) => {\n      this.examinePath();\n    });\n  }\n\n  changeTab(tab: number): void {\n\n    if (this.activeTab === tab)\n      return\n\n    switch (tab) {\n      case 1:\n      default:\n        this.activeTab = 1;\n        window.history.pushState(null, \"Tab1\", \"/all-items\");\n        break;\n      case 2:\n        this.activeTab = 2;\n        window.history.pushState(null, \"Tab2\", \"/pending-items\");\n        break;\n      case 3:\n        this.activeTab = 3;\n        window.history.pushState(null, \"Tab3\", \"/completed-items\");\n        break;\n    }\n  }\n\n  examinePath() {\n\n    switch (window.location.pathname) {\n      case \"/all-items\":\n      case \"\":\n      default:\n        this.activeTab = 1;\n        break;\n      case \"/pending-items\":\n        this.activeTab = 2;\n        break;\n      case \"/completed-items\":\n        this.activeTab = 3;\n        break;\n    }\n\n\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}