{"ast":null,"code":"import ToDo from '../model/ToDo';\nimport ToDoItem from '../model/ToDoItem';\nimport * as i0 from \"@angular/core\";\nexport class ItemsService {\n  constructor() {\n    this.todo = new ToDo();\n  }\n  addItem(content) {\n    let item = new ToDoItem(content, new Date());\n    this.todo.add(item);\n  }\n  deleteItem(item) {\n    this.todo.delete(item);\n  }\n  changeItemStatus(item) {\n    this.todo.changeState(item);\n  }\n  static #_ = this.ɵfac = function ItemsService_Factory(t) {\n    return new (t || ItemsService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ItemsService,\n    factory: ItemsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,OAAOA,IAAI,MAAM,eAAe;AAChC,OAAOC,QAAQ,MAAM,mBAAmB;;AAKxC,OAAM,MAAOC,YAAY;EAGvBC;IACE,IAAI,CAACC,IAAI,GAAG,IAAIJ,IAAI;EACtB;EAEAK,OAAO,CAACC,OAAY;IAClB,IAAIC,IAAI,GAAG,IAAIN,QAAQ,CAACK,OAAO,EAAE,IAAIE,IAAI,EAAE,CAAC;IAC5C,IAAI,CAACJ,IAAI,CAACK,GAAG,CAACF,IAAI,CAAC;EACrB;EAEAG,UAAU,CAACH,IAAS;IAClB,IAAI,CAACH,IAAI,CAACO,MAAM,CAACJ,IAAI,CAAC;EACxB;EAEAK,gBAAgB,CAACL,IAA6B;IAC5C,IAAI,CAACH,IAAI,CAACS,WAAW,CAACN,IAAI,CAAC;EAC7B;EAAC;qBAlBUL,YAAY;EAAA;EAAA;WAAZA,YAAY;IAAAY,SAAZZ,YAAY;IAAAa,YAFX;EAAM","names":["ToDo","ToDoItem","ItemsService","constructor","todo","addItem","content","item","Date","add","deleteItem","delete","changeItemStatus","changeState","factory","providedIn"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\FRONTEND\\JS APP DEV\\ANGULAR-to-do\\todo-app\\src\\app\\services\\items.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport ToDo from '../model/ToDo';\nimport ToDoItem from '../model/ToDoItem';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemsService {\n\n  todo: ToDo;\n  constructor() { \n    this.todo = new ToDo;\n  }\n\n  addItem(content: any){\n    let item = new ToDoItem(content, new Date());\n    this.todo.add(item);\n  }\n\n  deleteItem(item: any){\n    this.todo.delete(item);\n  }\n\n  changeItemStatus(item: { completed: boolean; }){\n    this.todo.changeState(item);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}